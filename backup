#!/usr/bin/env bash
ORIG_VOLUME='Apps_and_content'
DEST_VOLUME='frøhvelv'
DEST_VOLUMES[1]='frøhvelv'

if [ $# -eq 1 ]; then
  DEST_VOLUME=${DEST_VOLUMES[$1]}
fi
if [ -z ${DEST_VOLUME} ]; then
  echo "PLEASE USE ONE OF THE FOLLOWING PARAMETERS (or NO PARAMETER for [1])"
  for i in $(seq ${#DEST_VOLUMES[@]}); do
   echo "- ${i} for ${DEST_VOLUMES[i]}"
  done
  exit 1
fi
if [ ! -d /Volumes/${DEST_VOLUME} ]; then
  echo "VOLUME '${DEST_VOLUME}' is not mounted. PLEASE DO SO."
  exit 2
fi

echo "USING volume '${DEST_VOLUME}'"

FILES[1]='README.md'

FOLDERS[1]='music'
FOLDERS[2]='photo_bank'
FOLDERS[3]='courses'    
FOLDERS[4]='harddrive_tools'
FOLDERS[5]='machine_learning_models'
FOLDERS[6]='packages'
FOLDERS[7]='vms'
FOLDERS[8]='data_projects'
FOLDERS[9]='installation_packages'
FOLDERS[10]='work_projects'
FOLDERS[11]='game_projects'
FOLDERS[12]='vms_sources'
FOLDERS[13]='dev_projects'

echo "UPDATING backup from '${ORIG_VOLUME}' to '${DEST_VOLUME}'"
for i in $(seq 1 1 ${#FILES[@]} 2>/dev/null); do
  echo "> ${FILES[i]}"
  rsync -aivu ./${FILES[i]} /Volumes/${DEST_VOLUME} --delete --exclude-from=./rsync_exclude
done

for i in $(seq 1 1 ${#FOLDERS[@]} 2>/dev/null); do
  echo "> ${FOLDERS[i]}"
  rsync -aivu ./${FOLDERS[i]}/ /Volumes/${DEST_VOLUME}/${FOLDERS[i]}/ --delete --exclude-from=./rsync_exclude
done


